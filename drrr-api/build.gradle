dependencies {
    implementation project(":drrr-core")
    implementation project(path: ':drrr-domain')
    implementation project(path: ':drrr-domain-redis')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation group: 'org.springframework.boot', name: 'spring-boot-docker-compose', version: '3.1.1'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

/*jwt 시작*/

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
/*jwt 끝*/

    //access token을 가져오거나 유저 정보를 가져올 때는 실제로 Oauth 서버와 통신을 해야 하기 때문에 WebClient를 사용하여 통신을 위한 WebFlux 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //gson
    implementation 'com.google.code.gson:gson:2.8.8'


    //json Parser
    implementation 'org.json:json:20210307'

/*jwt 끝*/

    // 카카오 API 및 인증 처리 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // oauth security nimbus jose jwt
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    //쿼리를 잘 알아보게 해준다.
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    //logback 관련 라이브러리
    implementation group: 'com.github.maricn', name: 'logback-slack-appender', version: '1.6.1'


    runtimeOnly 'com.mysql:mysql-connector-j'
    /*implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"*/
}

